{
	"scope": "source.sas - variable.other.sas",

	"completions":
	[
		"sas",

		{"trigger":"abs","contents":"abs(${1:numeric})"},
		{"trigger":"addr","contents":"addr(${1:variable})"},
		{"trigger":"addrlong","contents":"addrlong(${1:variable})"},
		{"trigger":"airy","contents":"airy(${1:numeric})"},
		{"trigger":"allcomb","contents":"allcomb(${1:count},${2:k},${3:variable-1},${4:...},${n:variable-n})"},
		{"trigger":"allcomb2","contents":"call allcomb(${1:count},${2:k},${3:variable-1},${4:...},${n:variable-n})"},
		{"trigger":"allcombi","contents":"call allcombi(${1:N},${2:K},${3:index-1},${4:...},${N-K:index-K},${N:<,index-added,index-removed>})"},
		{"trigger":"allperm","contents":"allperm(${1:count},${2:variable-1},${3:<,variable-2 ...>})"},
		{"trigger":"allperm2","contents":"call allperm(${1:count},${2:variable-1},${3:<,variable-2 ...>})"},
		{"trigger":"anyalnum","contents":"anyalnum(${1:string},${2:<,start>})"},
		{"trigger":"anyalpha","contents":"anyalpha(${1:string},${2:<,start>})"},
		{"trigger":"anycntrl","contents":"anycntrl(${1:string},${2:<,start>})"},
		{"trigger":"anydigit","contents":"anydigit(${1:string},${2:<,start>})"},
		{"trigger":"anyfirst","contents":"anyfirst(${1:string},${2:<,start>})"},
		{"trigger":"anygraph","contents":"anygraph(${1:string},${2:<,start>})"},
		{"trigger":"anylower","contents":"anylower(${1:string},${2:<,start>})"},
		{"trigger":"anyname","contents":"anyname(${1:string},${2:<,start>})"},
		{"trigger":"anyprint","contents":"anyprint(${1:string},${2:<,start>})"},
		{"trigger":"anypunct","contents":"anypunct(${1:string},${2:<,start>})"},
		{"trigger":"anyspace","contents":"anyspace(${1:string},${2:<,start>})"},
		{"trigger":"anyupper","contents":"anyupper(${1:string},${2:<,start>})"},
		{"trigger":"anyxdigit","contents":"anyxdigit(${1:string},${2:<,start>})"},
		{"trigger":"arcos","contents":"arcos(${1:numeric})"},
		{"trigger":"arcosh","contents":"arcosh(${1:numeric})"},
		{"trigger":"arsin","contents":"arsin(${1:numeric})"},
		{"trigger":"arsinh","contents":"arsinh(${1:numeric})"},
		{"trigger":"artanh","contents":"artanh(${1:numeric})"},
		{"trigger":"atan","contents":"atan(${1:numeric})"},
		{"trigger":"atan2","contents":"atan2(${1:numeric-1},${2:numeric-2})"},
		{"trigger":"attrc","contents":"attrc(${1:data-set-id},${2:attr-name})"},
		{"trigger":"attrn","contents":"attrn(${1:data-set-id},${2:attr-name})"},
		{"trigger":"band","contents":"band(${1:numeric-1},${2:numeric-2})"},
		{"trigger":"beta","contents":"beta(${1:1st shape parama a},${2:2nd shape param b})"},
		{"trigger":"betainv","contents":"betainv(${1:p},${2:1st shape param a},${3:2nd shape param b})"},
		{"trigger":"blackclprc","contents":"blackclprc(${1:E},${2:t},${3:F},${4:r},${5:sigma})"},
		{"trigger":"blackptprc","contents":"blackptprc(${1:E},${2:t},${3:F},${4:r},${5:sigma})"},
		{"trigger":"blkshclprc","contents":"blkshclprc(${1:E},${2:t},${3:S},${4:r},${5:sigma})"},
		{"trigger":"blkshptprc","contents":"blkshptprc(${1:E},${2:t},${3:S},${4:r},${5:sigma})"},
		{"trigger":"blshift","contents":"blshift(${1:numeric-1},${2:numeric-2})"},
		{"trigger":"bnot","contents":"bnot(${1:numeric})"},
		{"trigger":"bor","contents":"bor(${1:numeric-1},${2:numeric-2})"},
		{"trigger":"brshift","contents":"brshift(${1:numeric-1},${2:numeric-2})"},
		{"trigger":"bxor","contents":"bxor(${1:numeric-1},${2:numeric-2})"},
		{"trigger":"byte","contents":"byte(${1:n})"},
		{"trigger":"cat","contents":"cat(${1:item-1},${2:<,...,item-n>})"},
		{"trigger":"catq","contents":"catq(${1:modifiers},${2:<,delimiter>},${3:item-1},${4:<,...,item-n>})"},
		{"trigger":"cats","contents":"call cats(${1:result},${2:<,item-1, ..., iterm-n>})"},
		{"trigger":"cats2","contents":"cats(${1:item-1},${2:<,...,item-n>})"},
		{"trigger":"catt","contents":"call catt(${1:result},${2:<,item-1, ..., iterm-n>})"},
		{"trigger":"catt2","contents":"catt(${1:item-1},${2:<,...,item-n>})"},
		{"trigger":"catx","contents":"call catx(${1:delimiter},${2:result},${3:<,item-1, ..., iterm-n>})"},
		{"trigger":"catx2","contents":"catx(${1:delimiter},${2:item-1},${3:<,...,item-n>})"},
		{"trigger":"cdf","contents":"cdf(${1:distribution},${2:quantile},${3:<,parm-1..,parm-k>})"},
		{"trigger":"ceil","contents":"ceil(${1:argument})"},
		{"trigger":"ceilz","contents":"ceilz(${1:argument})"},
		{"trigger":"cexist","contents":"cexist(${1:entry},${2:<'U'>})"},
		{"trigger":"compcost","contents":"call compcost(${1:operation-1},${2:value-1},${3:<,operation-2,value-2 ...>})"},
		{"trigger":"execute","contents":"call execute(${1:argument})"},
		{"trigger":"graycode","contents":"call graycode(${1:k},${2:num variable-1},${3:...},${4:num variable-n})"},
		{"trigger":"graycode2","contents":"call graycode(${1:k},${2:char variable <,n<,in-out>>})"},
		{"trigger":"is8601_convert","contents":"call is8601_convert(${1:convert-from},${2:convert-to},${3:<from-variables>},${4:<to-variables>},${5:<date-time-replacements>})"},
		{"trigger":"label","contents":"call label(${1:variable-1},${2:variable-2})"},
		{"trigger":"lexcomb","contents":"call lexcomb(${1:count},${2:k},${3:variable-1},${4:...},${n:variable-n})"},
		{"trigger":"lexcombi","contents":"call lexcombi(${1:n},${2:k},${3:index-1},${4:...},${k:index-k})"},
		{"trigger":"lexperk","contents":"call lexperk(${1:count},${2:k},${3:variable-1},${4:...},${n:variable-n})"},
		{"trigger":"lexperm","contents":"call lexperm(${1:count},${2:variable-1},${3:<,variable-N ...>})"},
		{"trigger":"logistic","contents":"call logistic(${1:num argument},${2:<,num argument,...>})"},
		{"trigger":"missing","contents":"call missing(${1:varname1},${2:<,varname2,...>})"},
		{"trigger":"module","contents":"call module(${1:<cntl-string,>},${2:module-name,${3:<,argument-1, ...,argument-n>})"},
		{"trigger":"poke","contents":"call poke(${1:source},${2:pointer},${3:<,length>},${4:<,floating-point>})"},
		{"trigger":"pokelong","contents":"call pokelong(${1:source},${2:pointer},${3:<,length>},${4:<,floating-point>})"},
		{"trigger":"prxchange","contents":"call prxchange(${1:regular-expression-id },${2:times},${3:old-string},${4:<, new-string<, result-length<, truncation-value<, number-of-changes>>>>})"},
		{"trigger":"prxdebug","contents":"call prxdebug(${1:on-off})"},
		{"trigger":"prxfree","contents":"call prxfree(${1:regular-expression-id})"},
		{"trigger":"prxnext","contents":"call prxnext(${1:regular-expression-id},${2:start},${3:stop},${4:source},${5:position},${6:length})"},
		{"trigger":"prxposn","contents":"call prxposn(${1:regular-expression-id},${2:capture-buffer},${3:start},${6:<,length>})"},
		{"trigger":"prxsubstr","contents":"call prxsubstr(${1:regular-expression-id},${2:source},${3:position},${4:<,length>})"},
		{"trigger":"ranbin","contents":"call ranbin(${1:seed},${2:n},${3:p},${4:x})"},
		{"trigger":"rancau","contents":"call rancau(${1:seed},${2:x})"},
		{"trigger":"rancomb","contents":"call rancomb(${1:seed},${2:k},${3:variable-1},${4:<,variable-2, ...>})"},
		{"trigger":"ranexp","contents":"call ranexp(${1:seed},${2:x})"},
		{"trigger":"rangam","contents":"call rangam(${1:seed},${2:a},${3:x})"},
		{"trigger":"rannor","contents":"call rannor(${1:seed},${2:x})"},
		{"trigger":"ranperk","contents":"call ranperk(${1:seed},${2:k},${3:variable-1},${4:<,variable-2, ...>})"},
		{"trigger":"ranperm","contents":"call ranperm(${1:seed},${2:variable-1},${3:<,variable-2, ...>})"},
		{"trigger":"ranpoi","contents":"call ranpoi(${1:seed},${2:m},${3:x})"},
		{"trigger":"rantbl","contents":"call rantbl(${1:seed},${2:p1},${3:<,pi,..pn>},${4:x})"},
		{"trigger":"rantri","contents":"call rantri(${1:seed},${2:h},${3:x})"},
		{"trigger":"ranuni","contents":"call ranuni(${1:seed},${2:x})"},
		{"trigger":"scan","contents":"call scan(${1:<string>},${2:count},${3:position},${4:length},${5:<,<charlist><,<modifier(s)>>>})"},
		{"trigger":"set","contents":"call set(${1:data-set-id})"},
		{"trigger":"sleep","contents":"call sleep(${1:n},${2:<,unit>})"},
		{"trigger":"softmax","contents":"call softmax(${1:argument},${2:<,argument,...>})"},
		{"trigger":"sortc","contents":"call sortc(${1:variable-1},${2:<,variable-n,...>})"},
		{"trigger":"sortn","contents":"call sortn(${1:variable-1},${2:<,variable-n,...>})"},
		{"trigger":"stdize","contents":"call stdize(${1:<option-1,option-2,..,>},${2:variable-1},${3:<,variable-2,...>})"},
		{"trigger":"streaminit","contents":"call streaminit(${1:seed})"},
		{"trigger":"symput","contents":"call symput(${1:macro-variable},${2:value})"},
		{"trigger":"symputx","contents":"call symputx(${1:macro-variable},${2:value},${3:<,symbol-table>})"},
		{"trigger":"system","contents":"call system(${1:command})"},
		{"trigger":"tanh","contents":"call tanh(${1:argument},${2:<,argument,...>})"},
		{"trigger":"vname","contents":"call vname(${1:variable-1},${2:variable-2})"},
		{"trigger":"vnext","contents":"call vnext(${1:varname},${2:<,vartype},${3:<,varlength})"},
		
		
		{ "trigger": "allperm", "contents": "allperm(${1:count},${2:variable-1},${3:<,variable-2 ...>})" }
	]
}